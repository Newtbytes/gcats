name: Build & Publish

on:
  push:
  workflow_dispatch:

env:
  PAKKU_TAG: v1.2.1

jobs:
  check:
    runs-on: ubuntu-latest

    outputs:
      pakku: ${{ steps.pakku.outputs.path }}
      pakku_json: ${{ steps.pakku-lock.outputs.path }}

    steps:
      - uses: actions/checkout@v2

      - name: Check pakku.json
        id: pakku
        run: |
          if [ ! -f "pakku.json" ]; then
            echo "Could not find 'pakku.json'" && exit 1
          else
            echo "path=pakku.json" >> $GITHUB_OUTPUT
          fi

      - name: Check pakku-lock.json
        id: pakku-lock
        run: |
          if [ ! -f "pakku-lock.json" ]; then
            echo "Could not find 'pakku-lock.json'" && exit 1
          else
            echo "path=pakku-lock.json" >> $GITHUB_OUTPUT
          fi

  info:
    runs-on: ubuntu-latest

    needs: [check]

    outputs:
      server_name: ${{ steps.server_name.outputs.prop }}
      server_version: ${{ steps.server_version.outputs.prop }}
      make_release: ${{ steps.check_release.outputs.make_release }}

    steps:
      - uses: actions/checkout@v2

      - name: Get server name
        id: server_name
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: ${{ needs.check.outputs.pakku }}
          prop_path: name

      - name: Get server version
        id: server_version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: ${{ needs.check.outputs.pakku }}
          prop_path: version

      - name: Get previous tag
        id: previous_tag
        run: |
          git fetch --tags
          echo "value=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: check_tag
        with:
          tag: ${{ steps.server_version.outputs.value }}

      - name: Check if new release should be generated
        id: check_release
        run: |
          echo "make_release=${{ steps.check_tag.outputs.exists == 'false' && github.ref_name == 'main' }}" >> $GITHUB_OUTPUT

  build-resource-pack:
    runs-on: ubuntu-latest

    needs: [info]

    outputs:
      filename: ${{ steps.get_filename.outputs.filename }}

    steps:
      - uses: actions/checkout@v2

      - name: Get filename
        id: get_filename
        run: echo "filename=${{ needs.info.outputs.server_name }}-${{ needs.info.outputs.server_version }}-resourcepack.zip" >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build requirements
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Build resource pack
        run: |
          python pack.py pack.toml build/${{ steps.get_filename.outputs.filename }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_filename.outputs.filename }}
          path: ${{ steps.get_filename.outputs.filename }}
          if-no-files-found: error
