name: Build & Publish

on:
  push:
  workflow_dispatch:

env:
  PAKKU_TAG: v1.2.1

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check pakku.json
        run: |
          if [ ! test -f "pakku.json" ]; then
            echo "Could not find 'pakku.json'" && exit 1
          fi
      
      - name: Check pakku_lock.json
        run: |
          if [ ! test -f "pakku_lock.json" ]; then
            echo "Could not find 'pakku_lock.json'" && exit 1
          fi

  info:
    runs-on: ubuntu-latest

    needs: [check]

    outputs:
      server_name: ${{ steps.server_name.outputs.value }}
      server_version: ${{ steps.server_version.outputs.value }}
      make_release: ${{ steps.check_release.outputs.make_release }}

    steps:
      - uses: actions/checkout@v2

      - name: Get pakku.json
        id: pakku
        run: echo "value=${cat pakku.json}" >> $GITHUB_OUTPUT

      - name: Get server name
        id: server_name
        run: echo "value=${{ fromJson(steps.pakku.outputs.value).name }}"" >> $GITHUB_OUTPUT

      - name: Get server version
        id: server_version
        run: echo "value=${{ fromJson(steps.pakku.outputs.value).version }}"" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: previous_tag
        run: |
          git fetch --tags
          echo "value=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: check_tag
        with:
          tag: ${{ steps.server_version.outputs.value }}

      - name: Check if new release should be generated
        id: check_release
        run: |
          echo "make_release=${{ steps.check_tag.outputs.exists == 'false' && github.ref_name == 'main' }}" >> $GITHUB_OUTPUT

  build-resource-pack:
    runs-on: ubuntu-latest

    needs: [info]

    outputs:
      filename: ${{ steps.get_filename.outputs.filename }}

    steps:
      - uses: actions/checkout@v2

      - name: Get filename
        id: get_filename
        run: echo "filename=${{ needs.info.outputs.server_name }}-${{ needs.info.outputs.server_version }}-resourcepack.zip" >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build requirements
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Build resource pack
        run: |
          python pack.py pack.toml build/resourcepack
          mv server/pack.zip ${{ steps.get_filename.outputs.filename }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_filename.outputs.filename }}
          path: ${{ steps.get_filename.outputs.filename }}
          if-no-files-found: error
