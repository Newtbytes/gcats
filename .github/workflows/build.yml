name: Build Server with Pakku

on:
  push:
    branches: [main]
  pull_request:
    paths:
      - '**.json'
      - '**.yml'
      - '**.yaml'
      - '**.mcmeta'
      - '**.mcfunction'
      - '**.py'
      - 'requirements.txt'
      - '.pakku/**'
      - 'datapacks/**'
      - '.github/workflows/build.yml'
  workflow_dispatch:

env:
  PAKKU_TAG: v1.2.1

jobs:
  check:
    runs-on: ubuntu-latest

    outputs:
      pakku: ${{ steps.pakku.outputs.path }}
      pakku_json: ${{ steps.pakku-lock.outputs.path }}

    steps:
      - uses: actions/checkout@v4

      - name: Check pakku.json
        id: pakku
        run: |
          if [ ! -f "pakku.json" ]; then
            echo "Could not find 'pakku.json'" && exit 1
          else
            echo "path=pakku.json" >> $GITHUB_OUTPUT
          fi

      - name: Check pakku-lock.json
        id: pakku-lock
        run: |
          if [ ! -f "pakku-lock.json" ]; then
            echo "Could not find 'pakku-lock.json'" && exit 1
          else
            echo "path=pakku-lock.json" >> $GITHUB_OUTPUT
          fi

  info:
    runs-on: ubuntu-latest

    needs: [check]

    outputs:
      server_name: ${{ steps.server_name.outputs.prop }}
      server_version: ${{ steps.server_version.outputs.prop }}
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}

    steps:
      - uses: actions/checkout@v4

      - name: Get server name
        id: server_name
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: ${{ needs.check.outputs.pakku }}
          prop_path: name

      - name: Get server version
        id: server_version
        uses: notiz-dev/github-action-json-property@v0.2.0
        with:
          path: ${{ needs.check.outputs.pakku }}
          prop_path: version

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46.0.5

  build-resource-pack:
    runs-on: ubuntu-latest

    needs: [info]

    outputs:
      filename: ${{ steps.get_filename.outputs.filename }}

    if: |
      contains(${{ needs.info.changed-files.outputs.files }}, 'beet') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'datapack') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'resourcepack') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'build') ||
      github.ref_name == 'main'

    steps:
      - uses: actions/checkout@v4

      - name: Get filename
        id: get_filename
        run: echo "filename=${{ needs.info.outputs.server_name }}.zip" >> $GITHUB_OUTPUT

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build resource pack
        run: |
          mkdir -p build
          beet

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_filename.outputs.filename }}
          path: build/${{ steps.get_filename.outputs.filename }}
          if-no-files-found: error

  build-modpack:
    runs-on: ubuntu-latest

    needs: [info]

    if: |
      contains(${{ needs.info.changed-files.outputs.files }}, 'pakku') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'mod') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'datapack') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'server') ||
      contains(${{ needs.info.changed-files.outputs.files }}, 'build') ||
      github.ref_name == 'main'

    steps:
      - uses: actions/checkout@v4

      - name: Get mrpack info
        id: mrpack
        run: |
          echo "filename=${{ needs.info.outputs.server_name }}-${{ needs.info.outputs.server_version }}.mrpack" >> $GITHUB_OUTPUT
          echo "dir=build/modrinth" >> $GITHUB_OUTPUT

      - name: Get serverpack info
        id: serverpack
        run: |
          echo "filename=${{ needs.info.outputs.server_name }}-${{ needs.info.outputs.server_version }}.zip" >> $GITHUB_OUTPUT
          echo "dir=build/serverpack" >> $GITHUB_OUTPUT

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache pakku.jar
        id: cache-pakku-jar
        uses: actions/cache@v4
        with:
          path: pakku.jar
          key: pakku-${{ env.PAKKU_TAG }}

      - name: Cache pakku
        uses: actions/cache@v4
        id: cache-pakku
        with:
          path: build/.cache
          key: pakku-cache-${{ hashFiles('pakku-lock.json') }}
          restore-keys: pakku-cache-

      - name: Download pakku.jar if not cached
        if: steps.cache-pakku.outputs.cache-hit != 'true'
        run: |
          curl -OL https://github.com/juraj-hrivnak/Pakku/releases/download/${{ env.PAKKU_TAG }}/pakku.jar

      - name: Export modpack
        run: |
          java -jar pakku.jar export

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.info.outputs.server_name }}-${{ needs.info.outputs.server_version }}
          path: |
            ${{ steps.mrpack.outputs.dir }}/${{ steps.mrpack.outputs.filename }}
            ${{ steps.serverpack.outputs.dir }}/${{ steps.serverpack.outputs.filename }}
          if-no-files-found: error
